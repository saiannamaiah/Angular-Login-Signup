{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"@angular/common/http\";\nimport * as i3 from \"@angular/router\";\nexport class LoginComponent {\n  constructor(formBuilder, http, router) {\n    this.formBuilder = formBuilder;\n    this.http = http;\n    this.router = router;\n  }\n  ngOnInit() {\n    this.loginForm = this.formBuilder.group({\n      email: [''],\n      password: ['']\n    });\n  }\n  login() {\n    this.http.get(\"http://localhost:3000/signupusers\").subscribe(res => {\n      const user = res.find(a => {\n        return a.email === this.loginForm.value.email && a.password === this.loginForm.value.password;\n      });\n      if (user) {\n        alert(\"Login Sucess\");\n        this.loginForm.reset();\n        this.router.navigate(['dashboard']);\n      } else {\n        alert(\"user not found\");\n      }\n    });\n  }\n}\nLoginComponent.ɵfac = function LoginComponent_Factory(t) {\n  return new (t || LoginComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.HttpClient), i0.ɵɵdirectiveInject(i3.Router));\n};\nLoginComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: LoginComponent,\n  selectors: [[\"app-login\"]],\n  decls: 25,\n  vars: 1,\n  consts: [[1, \"container\"], [1, \"row\"], [1, \"col-md-6\"], [1, \"card\"], [1, \"text-center\"], [3, \"formGroup\", \"ngSubmit\"], [1, \"mb-3\"], [\"for\", \"exampleInputEmail1\", 1, \"form-label\"], [\"formControlName\", \"email\", \"type\", \"email\", \"id\", \"exampleInputEmail1\", \"aria-describedby\", \"emailHelp\", 1, \"form-control\"], [\"id\", \"emailHelp\", 1, \"form-text\"], [\"for\", \"exampleInputPassword1\", 1, \"form-label\"], [\"formControlName\", \"password\", \"type\", \"password\", \"id\", \"exampleInputPassword1\", 1, \"form-control\"], [\"type\", \"submit\", 1, \"btn\", \"btn-primary\", \"mb-3\"], [\"routerLink\", \"/signup\", 2, \"color\", \"white\", \"margin-top\", \"3px\"]],\n  template: function LoginComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"div\", 2)(3, \"div\", 3)(4, \"div\", 4)(5, \"h1\");\n      i0.ɵɵtext(6, \"login\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(7, \"h6\");\n      i0.ɵɵtext(8, \"Please Enter Email and password!!\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(9, \"form\")(10, \"form\", 5);\n      i0.ɵɵlistener(\"ngSubmit\", function LoginComponent_Template_form_ngSubmit_10_listener() {\n        return ctx.login();\n      });\n      i0.ɵɵelementStart(11, \"div\", 6)(12, \"label\", 7);\n      i0.ɵɵtext(13, \"Email address\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(14, \"input\", 8);\n      i0.ɵɵelementStart(15, \"div\", 9);\n      i0.ɵɵtext(16, \"We'll never share your email with anyone else.\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(17, \"div\", 6)(18, \"label\", 10);\n      i0.ɵɵtext(19, \"Password\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(20, \"input\", 11);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(21, \"button\", 12);\n      i0.ɵɵtext(22, \"Login\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(23, \"a\", 13);\n      i0.ɵɵtext(24, \"New User? Click to Signup\");\n      i0.ɵɵelementEnd()()()()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(10);\n      i0.ɵɵproperty(\"formGroup\", ctx.loginForm);\n    }\n  },\n  dependencies: [i3.RouterLink, i1.ɵNgNoValidate, i1.DefaultValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.FormGroupDirective, i1.FormControlName],\n  styles: [\".card[_ngcontent-%COMP%]{\\n    margin-top: 10px;\\n    border: none;\\n    width: 500px;\\n    padding: 40px;\\n    position: absolute;\\n    top: 50%;\\n    left: 50%;\\n    transform: translate(-50%, -50%);\\n    background: hsla(205, 46%, 40%, 1);\\n    background: linear-gradient(90 deg,hsla(205, 46%, 40%, 1 ) 0%,hsla(205, 46%, 40%, 1) 100%);\\n}\\n\\n.card[_ngcontent-%COMP%]   label[_ngcontent-%COMP%]   h1[_ngcontent-%COMP%], h6[_ngcontent-%COMP%]{\\n    color: whitesmoke;\\n}\\nlabel[_ngcontent-%COMP%]{\\n    color: whitesmoke;\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvbG9naW4vbG9naW4uY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtJQUNJLGdCQUFnQjtJQUNoQixZQUFZO0lBQ1osWUFBWTtJQUNaLGFBQWE7SUFDYixrQkFBa0I7SUFDbEIsUUFBUTtJQUNSLFNBQVM7SUFDVCxnQ0FBZ0M7SUFDaEMsa0NBQWtDO0lBQ2xDLDBGQUEwRjtBQUM5Rjs7QUFFQTtJQUNJLGlCQUFpQjtBQUNyQjtBQUNBO0lBQ0ksaUJBQWlCO0FBQ3JCIiwic291cmNlc0NvbnRlbnQiOlsiLmNhcmR7XHJcbiAgICBtYXJnaW4tdG9wOiAxMHB4O1xyXG4gICAgYm9yZGVyOiBub25lO1xyXG4gICAgd2lkdGg6IDUwMHB4O1xyXG4gICAgcGFkZGluZzogNDBweDtcclxuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcclxuICAgIHRvcDogNTAlO1xyXG4gICAgbGVmdDogNTAlO1xyXG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGUoLTUwJSwgLTUwJSk7XHJcbiAgICBiYWNrZ3JvdW5kOiBoc2xhKDIwNSwgNDYlLCA0MCUsIDEpO1xyXG4gICAgYmFja2dyb3VuZDogbGluZWFyLWdyYWRpZW50KDkwIGRlZyxoc2xhKDIwNSwgNDYlLCA0MCUsIDEgKSAwJSxoc2xhKDIwNSwgNDYlLCA0MCUsIDEpIDEwMCUpO1xyXG59XHJcblxyXG4uY2FyZCBsYWJlbCBoMSxoNntcclxuICAgIGNvbG9yOiB3aGl0ZXNtb2tlO1xyXG59XHJcbmxhYmVse1xyXG4gICAgY29sb3I6IHdoaXRlc21va2U7XHJcbn0iXSwic291cmNlUm9vdCI6IiJ9 */\"]\n});","map":{"version":3,"names":["LoginComponent","constructor","formBuilder","http","router","ngOnInit","loginForm","group","email","password","login","get","subscribe","res","user","find","a","value","alert","reset","navigate","i0","ɵɵdirectiveInject","i1","FormBuilder","i2","HttpClient","i3","Router","selectors","decls","vars","consts","template","LoginComponent_Template","rf","ctx","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵlistener","LoginComponent_Template_form_ngSubmit_10_listener","ɵɵelement","ɵɵadvance","ɵɵproperty"],"sources":["C:\\Users\\SaiAnnamaiah B\\Downloads\\Login&Signup Json\\loginandsignup\\src\\app\\login\\login.component.ts","C:\\Users\\SaiAnnamaiah B\\Downloads\\Login&Signup Json\\loginandsignup\\src\\app\\login\\login.component.html"],"sourcesContent":["import { HttpClient } from '@angular/common/http';\nimport { Component } from '@angular/core';\nimport { FormBuilder,FormGroup } from '@angular/forms';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent {\n\n  public loginForm!:FormGroup;\n  constructor(private formBuilder : FormBuilder, private http:HttpClient, private router: Router){\n\n  }\n\n  ngOnInit (): void {\nthis.loginForm = this.formBuilder.group ({\n  email:[''],\n  password:['']\n})\n  }\n  login(){\n    this.http.get<any>(\"http://localhost:3000/signupusers\")\n    .subscribe(res =>{\n      const user = res.find((a:any)=>{\n        return a.email === this.loginForm.value.email && a.password === this.loginForm.value.password\n      });\n      if(user){\n        alert(\"Login Sucess\");\n        this.loginForm.reset();\n        this.router.navigate(['dashboard'])\n      }\n      else {\n        alert(\"user not found\")\n      }\n    })\n  }\n\n}\n","<div class=\"container\">\n    <div class=\"row\">\n        <div class=\"col-md-6\">\n            <div class=\"card\">\n                <div class=\"text-center\">\n                    <h1>login</h1>\n                    <h6>Please Enter Email and password!!</h6>\n                </div>\n                <form>\n                    <form [formGroup]=\"loginForm\" (ngSubmit)=\"login()\">\n                        <div class=\"mb-3\">\n                            <label for=\"exampleInputEmail1\" class=\"form-label\">Email address</label>\n                            <input formControlName=\"email\" type=\"email\" class=\"form-control\" id=\"exampleInputEmail1\"\n                                aria-describedby=\"emailHelp\">\n                            <div id=\"emailHelp\" class=\"form-text\">We'll never share your email with anyone else.</div>\n                        </div>\n                        <div class=\"mb-3\">\n                            <label for=\"exampleInputPassword1\" class=\"form-label\">Password</label>\n                            <input formControlName=\"password\" type=\"password\" class=\"form-control\" id=\"exampleInputPassword1\">\n                        </div>\n                        <button type=\"submit\" class=\"btn btn-primary mb-3\">Login</button>\n                    </form>\n                    <a style=\"color: white; margin-top: 3px;\" routerLink=\"/signup\">New User? Click to Signup</a>\n                </form>\n            </div>\n        </div>\n    </div>\n</div>"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}